on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    strategy:
      matrix:
        include:
          - category: menu
            cmd: --filter TestCategory=Menu
          - category: cooking
            cmd: --filter TestCategory=Cooking

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
          source-url: ${{ secrets.NUGET_SOURCE }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Build
        run: dotnet build --configuration Release

      - name: Test
        run: dotnet test ${{ matrix.cmd }} --configuration Release --no-build

      - name: Upload openapi coverage results
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1d
          name: openapi-coverage-${{ matrix.category }}
          path: |
            ./FoodApi.Tests/bin/generated_specs/*.json
            ./swagger.json
        
  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: "build"
    
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: openapi-coverage
          pattern: openapi-coverage-*
          merge-multiple: true

      - run: ls -R openapi-coverage

      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          failOnError: false
          name: openapi-coverage-*

      - name: Cache coverage tool
        id: cache-coverage
        uses: actions/cache@v4
        with:
          path: ./swagger-coverage-commandline
          key: ${{ runner.os }}-swagger-coverage-commandline
      
      - name: Download swagger-coverage
        if: steps.cache-coverage.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/viclovsky/swagger-coverage/releases/download/1.5.0/swagger-coverage-1.5.0.zip
          unzip swagger-coverage-1.5.0.zip -d ./swagger-coverage-commandline
          
      - run: ls -R swagger-coverage-commandline