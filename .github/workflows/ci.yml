on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    strategy:
      matrix:
        include:
          - category: menu
            cmd: --filter TestCategory=Menu
          - category: cooking
            cmd: --filter TestCategory=Cooking

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
          source-url: ${{ secrets.NUGET_SOURCE }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Build
        run: dotnet build --configuration Release

      - name: Test
        run: dotnet test ${{ matrix.cmd }} --configuration Release --no-build

      - name: Copy actual json
        run: cp ./FoodApi.Tests/swagger.json ./FoodApi.Tests/bin/generated_specs/swagger.json

      - name: Upload openapi coverage results
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1d
          name: openapi-coverage-output-${{ matrix.category }}
          path: ./FoodApi.Tests/bin/generated_specs/*.json
        
  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: "build"
    
    steps:
      - uses: actions/checkout@v4
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: openapi-coverage-output
          pattern: openapi-coverage-output-*
          merge-multiple: true
      
#      - name: Download All Artifacts
#        uses: actions/download-artifact@v4
#        with:
#          name: openapi-coverage-resources
  
      - run: ls -R openapi-coverage-output

      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          failOnError: false
          name: openapi-coverage-*

#      - name: Restore cache
#        id: cache-coverage-restore
#        uses: actions/cache/restore@v4
#        with:
#          path: swagger-coverage-commandline
#          key: swagger-coverage-commandline

      - name: Cache coverage tool
        id: cache-coverage
        uses: actions/cache@v4
        with:
          path: ./swagger-coverage-commandline
          key: swagger-coverage-commandline

      - name: Download swagger-coverage
        if: steps.cache-coverage.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/viclovsky/swagger-coverage/releases/download/1.5.0/swagger-coverage-1.5.0.zip
          unzip swagger-coverage-1.5.0.zip
          mv swagger-coverage-commandline-1.5.0 swagger-coverage-commandline

#      - name: Save cache
#        if: steps.cache-coverage-restore.outputs.cache-hit != 'true'
#        uses: actions/cache/save@v4
#        with:
#          path: swagger-coverage-commandline
#          key: swagger-coverage-commandline
      
      - run: ls -R swagger-coverage-commandline      
      
#      - name: Copy all file to folder
#        run: cp -R ./openapi-coverage ./swagger-coverage-commandline/

      - run: mv ./openapi-coverage-output/swagger.json ./
      - run: mv ./build/openapi-coverage ./

      - name: Run coverage tool
        run: |
          ./swagger-coverage-commandline/bin/swagger-coverage-commandline -q \
          -s ./swagger.json \
          -i ./openapi-coverage-output \
          -c ./openapi-coverage/config.json

      - name: Run coverage tool
        run: |
          ./swagger-coverage-commandline/bin/swagger-coverage-commandline -q \
          -s ./swagger.json \
          -i ./openapi-coverage-output \
          -c ./openapi-coverage/config.default.json
          
      - run: ls -R ./
        
#      - name: Convert HTML to Markdown
#        id: html2markdown
#        uses: rknj/html2markdown@v1.1.0
#        with:
#          html-file: "swagger-coverage-report.html"
      - uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'

      - run: npm install turndown

      - uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            var TurndownService = require('turndown')
            var turndownService = new TurndownService()
            
            const html = fs.readFileSync("swagger-coverage-report.html", "utf8");
            var markdown = turndownService.turndown(html)
            fs.writeFileSync("swagger-coverage-report.md", html); 
      - run: cat swagger-coverage-report.md >> $GITHUB_STEP_SUMMARY
        
#      - name: Add image tag to comments
#        uses: actions/github-script@v7
#        continue-on-error: true
#        if: ${{ github.event_name == 'pull_request' }}
#        with:
#          github-token: ${{github.token}}
#          script: |
#            github.rest.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: 'Last build image tag `${{ needs.prepare.outputs.image_tag }}`'
#            })